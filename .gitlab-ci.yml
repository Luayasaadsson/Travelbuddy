stages:
  - build
  - image

.build_artifact_frontend:
  stage: build
  image: node
  before_script:
    - cd frontend
    - find ./ -type f -exec sed -i 's/localhost:7038/travelbuddy.mooo.com/g' {} +
    - sed -i 's|https://travelbuddy.mooo.com/login?useCookies=true|https://travelbuddy.mooo.com/backend/login?useCookies=true|g' src/components/SignUp.tsx
    - sed -i 's|https://travelbuddy.mooo.com/login?useCookies=true|https://travelbuddy.mooo.com/backend/login?useCookies=true|g' src/components/LogIn.tsx
    - sed -i 's/tsc && vite build/vite build/g' package.json
    - npm install
  script:
    - npm run build
  artifacts:
    paths:
      - frontend/dist/*

#build_artifact_backend:
#  stage: build
#  image: mcr.microsoft.com/dotnet/sdk:8.0-cbl-mariner2.0-arm64v8
#  before_script:
#    - cd backend/API
#  script:
#    - dotnet publish
#  artifacts:
#    paths:
#      - backend/API/bin/Release/net8.0/publish/*

.build_image_frontend:
  stage: image
  dependencies:
    - build_artifact_frontend
  image: docker:26.1.0
  services:
    - docker:26.1.0-dind
  variables:
    DOCKER_TLS_CERTDIR: "/certs"
    IMAGE_TAG: travelbuddy-frontend:$CI_COMMIT_SHORT_SHA
  before_script:
    - cd frontend
  script:
    - docker login $CI_REGISTRY -u $CI_REGISTRY_USER -p $CI_JOB_TOKEN
    - docker build -t $CI_REGISTRY_IMAGE/$IMAGE_TAG .
    - docker push $CI_REGISTRY_IMAGE/$IMAGE_TAG

build_image_backend:
  stage: image
  image: docker:26.1.0
  services:
    - docker:26.1.0-dind
  variables:
    DOCKER_TLS_CERTDIR: "/certs"
    IMAGE_TAG: travelbuddy-backend:$CI_COMMIT_SHORT_SHA
  before_script:
    - cd backend
  script:
    - docker login $CI_REGISTRY -u $CI_REGISTRY_USER -p $CI_JOB_TOKEN
    - docker build -t $CI_REGISTRY_IMAGE/$IMAGE_TAG .
    - docker push $CI_REGISTRY_IMAGE/$IMAGE_TAG
